.text
.globl __start

__start:

addi $s2,$s2,5 # 5 elementos
lw $t0,0($s1) # initialize maximum to A[0]
addi $t1,$zero,0 # initialize index i to 0

addi $t5,$zero,4
sw $t5,4($s1) #guardar lo q hay en t5 en s1
addi $t5,$s0,7
sw $t5,8($s1)
addi $t5,$s0,1
sw $t5,12($s1)
addi $t5,$s0,9
sw $t5,16($s1)
addi $t5,$s0,2
sw $t5,20($s1)


	lw $t0,0($s1) # initialize maximum to A[0]
	addi $t1,$zero,0 # initialize index i to 0
	
	
loop: 	add $t1,$t1,1 # increment index i by 1
	beq $t1,$s2,done # if all elements examined, quit
	add $t2,$t1,$t1 # compute 2i in $t2
	add $t2,$t2,$t2 # compute 4i in $t2
	add $t2,$t2,$s1 # form address of A[i] in $t2
	lw $t3,0($t2) # load value of A[i] into $t3
	slt $t4,$t0,$t3 # maximum < A[i]?	
	beq $t4,$zero,loop # if not, repeat with no change
	addi $t0,$t3,0 # if so, A[i] is the new maximum
	j loop 	# change completed; now repeat
	
done: addi $t6, $0, ($s1)
      lw $t7, 0($t3)
      sw $t0,20($s3) 
      addi $a0, $t0, 0
      li $v0, 1 
      syscall
      
 
li $v0, 1 
syscall

.data